package com.testngwriteconpart2;
import java.util.ArrayList;
import java.util.List;

import org.testng.Assert;
import org.testng.annotations.Test;
import org.testngreadreadconcept.Data;

import io.restassured.http.Header;
import io.restassured.http.Headers;
import io.restassured.response.Response;

public class SampleLogin extends BaseClass  {
	String logtoken;

	@Test(priority = 2)
	private void addUserAddress() {

		// 1.Headers

		List<Header> listHeaders = new ArrayList<>();

		Header h1 = new Header("accept", "application/json");
		Header h2 = new Header("Authorization", "Bearer " + logtoken);
		Header h3 = new Header("Content-Type", "application/json");

		listHeaders.add(h1);
		listHeaders.add(h2);
		listHeaders.add(h3);
		
		Headers headers = new Headers(listHeaders);
		addHeaders(headers);

		// 2.pass the payload

		AddUserAddress_Input_Pojo addUserAddress_Input_Pojo = new AddUserAddress_Input_Pojo("G K", "SUGUMAR",
				"8939282410", "apartment", 33, 3378, 101, "609887", "64/63 partap nagar", "home");

		addBody(addUserAddress_Input_Pojo);

		// 3.RequestType

		Response response = requestType("POST", "https://omrbranch.com/api/addUserAddress");

		int statusCode = getStatusCode(response);
		System.out.println(statusCode);

		Assert.assertEquals(statusCode, 200, "verify status code");
		System.out.println(getAsPretty(response));

		AddUserAddress_Output_Pojo address_Output_Pojo = response.as(AddUserAddress_Output_Pojo.class);
		String message = address_Output_Pojo.getMessage();
		Assert.assertEquals(message, "Address added successfully", "verify Address added successfully");

	}

	@Test(priority = 1)
	public void login() {

		// 1.Header

		addHeader("accept", "application/json");
		// 2.Basic Authentication

		basicAuth("sathishmec97@gmail.com", "Sahish$123");

		// 3.Request Type

		Response response = requestType("POST", "https://omrbranch.com/api/postmanBasicAuthLogin");

		int statusCode = getStatusCode(response);
		Assert.assertEquals(200, statusCode, "verify status code");

		String resBodyAsPrettyString = getAsPretty(response);
		System.out.println(resBodyAsPrettyString);

		Login_Output_Pojo as = response.as(Login_Output_Pojo.class);

		System.out.println(as);

		Data data = as.getData();

		String first_name = data.getFirst_name();
		Assert.assertEquals(first_name, "G K", "verifying first name");
		System.out.println(first_name);

		Login_Output_Pojo login_Output_Pojo = response.as(Login_Output_Pojo.class);
		String message = login_Output_Pojo.getMessage();
		Assert.assertEquals(message, "Login successfully", "verify Login successfully");
		logtoken = login_Output_Pojo.getData().getLogtoken();

	}


}
